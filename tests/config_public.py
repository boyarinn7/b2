import os
import json
import boto3
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger("b2_debug_script")

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ B2
B2_BUCKET_NAME = "boyarinnbotbucket"  # –ò–º—è –≤–∞—à–µ–≥–æ –±–∞–∫–µ—Ç–∞
B2_ENDPOINT = "https://s3.us-east-005.backblazeb2.com"  # Endpoint B2
B2_ACCESS_KEY = "00577030c4f964a0000000001"  # –í–∞—à access key
B2_SECRET_KEY = "K005jbqS4BAIdtXF9vE5nXJgsV4NHVI"  # –í–∞—à secret key
CONFIG_PUBLIC_REMOTE_PATH = "config/config_public.json"  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ B2
CONFIG_PUBLIC_LOCAL_PATH = os.path.abspath("config_public.json")  # –õ–æ–∫–∞–ª—å–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ B2
def get_b2_client():
    try:
        return boto3.client(
            "s3",
            endpoint_url=B2_ENDPOINT,
            aws_access_key_id=B2_ACCESS_KEY,
            aws_secret_access_key=B2_SECRET_KEY,
        )
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ B2: {e}")
        raise

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∏–∑ B2
def download_file_from_b2(client, remote_path, local_path):
    try:
        client.download_file(B2_BUCKET_NAME, remote_path, local_path)
        logger.info(f"‚úÖ –§–∞–π–ª '{remote_path}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ B2 –≤ {local_path}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ –∏–∑ B2: {e}")
        raise

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
def main():
    try:
        logger.info("üîÑ –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É config_public.json –∏–∑ B2...")
        b2_client = get_b2_client()
        download_file_from_b2(b2_client, CONFIG_PUBLIC_REMOTE_PATH, CONFIG_PUBLIC_LOCAL_PATH)

        # –ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞
        with open(CONFIG_PUBLIC_LOCAL_PATH, "r", encoding="utf-8") as file:
            config_public = json.load(file)
        logger.info(f"‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ config_public.json: {json.dumps(config_public, ensure_ascii=False, indent=4)}")

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        os.remove(CONFIG_PUBLIC_LOCAL_PATH)
        logger.info("üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª config_public.json —É–¥–∞–ª—ë–Ω.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ: {e}")

if __name__ == "__main__":
    main()
