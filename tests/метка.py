import os
import boto3
import json

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
B2_ACCESS_KEY = os.getenv("B2_ACCESS_KEY")
B2_SECRET_KEY = os.getenv("B2_SECRET_KEY")
B2_BUCKET_NAME = os.getenv("B2_BUCKET_NAME")
B2_ENDPOINT = os.getenv("B2_ENDPOINT")

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –Ω—É–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
CONFIG_FILES = {
    "config/config_gen.json": {"generation_id": None},
    "config/config_midjourney.json": {
        "midjourney_task": None,
        "midjourney_results": {},
        "generation": False
    },
    "config/config_public.json": {"processing_lock": False}
}

LOCAL_DIR = r"C:\Users\boyar\777"  # —Ç—ã —É–∂ —Å–∞–º –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not all([B2_ACCESS_KEY, B2_SECRET_KEY, B2_BUCKET_NAME, B2_ENDPOINT]):
    print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è B2.")
    exit(1)

# –ö–ª–∏–µ–Ω—Ç B2
s3 = boto3.client(
    "s3",
    endpoint_url=B2_ENDPOINT,
    aws_access_key_id=B2_ACCESS_KEY,
    aws_secret_access_key=B2_SECRET_KEY
)

def process_config(file_key, desired_values):
    local_path = os.path.join(LOCAL_DIR, os.path.basename(file_key))

    try:
        print(f"\n‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º {file_key} ‚Üí {local_path}")
        s3.download_file(B2_BUCKET_NAME, file_key, local_path)

        with open(local_path, "r", encoding="utf-8") as f:
            try:
                data = json.load(f)
            except json.JSONDecodeError:
                print("‚ö†Ô∏è –§–∞–π–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ –±–∏—Ç—ã–π. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π.")
                data = {}

        updated = False
        for k, v in desired_values.items():
            if data.get(k) != v:
                data[k] = v
                updated = True

        if updated:
            with open(local_path, "w", encoding="utf-8") as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
            print("üìù –û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è.")
        else:
            print("‚úÖ –í—Å—ë —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")

        print(f"üîº –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ {file_key}")
        s3.upload_file(local_path, B2_BUCKET_NAME, file_key)
        print("‚òëÔ∏è –ì–æ—Ç–æ–≤–æ.")

        print(f"\nüìÑ –§–∏–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥ {file_key}:")
        print(json.dumps(data, ensure_ascii=False, indent=2))

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {file_key}: {e}")

if __name__ == "__main__":
    for config_path, values in CONFIG_FILES.items():
        process_config(config_path, values)
