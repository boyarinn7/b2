name: Test

on:
  schedule:
    - cron: '30 20 * * *'  # 20:30 UTC
  workflow_dispatch:

jobs:
  run-b2-storage-manager:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Извлечение кода
      uses: actions/checkout@v4

    - name: Настройка Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Установка системных зависимостей
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Очистка кэша pip
      run: |
        rm -rf ~/.cache/pip

    - name: Установка зависимостей Python
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "requirements.txt не найден"; exit 1; fi
        echo "--- Проверка установки runwayml ---"
        # Добавлена явная проверка импорта runwayml
        python -c "import runwayml; print('RunwayML version:', runwayml.__version__)" || echo "ОШИБКА: Не удалось импортировать runwayml"
        echo "--- Вывод pip list ---"
        pip list

    - name: Установка переменных среды
      run: |
        echo "B2_ENDPOINT=${{ secrets.B2_ENDPOINT }}" >> $GITHUB_ENV
        echo "B2_ACCESS_KEY=${{ secrets.B2_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "B2_SECRET_KEY=${{ secrets.B2_SECRET_KEY }}" >> $GITHUB_ENV
        echo "B2_BUCKET_NAME=${{ secrets.B2_BUCKET_NAME }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "MIDJOURNEY_API_KEY=${{ secrets.MIDJOURNEY_API_KEY }}" >> $GITHUB_ENV
        echo "RUNWAY_API_KEY=${{ secrets.RUNWAY_API_KEY }}" >> $GITHUB_ENV

    - name: Проверка структуры директорий
      run: |
        ls -la
        pwd # Показываем текущую рабочую директорию
        ls -la scripts || echo "Каталог scripts не найден"
        ls -la modules || echo "Каталог modules не найден"
        # Проверим, нет ли файла runwayml.py в корне или модулях/скриптах
        find . -name 'runwayml.py' -o -name 'runwayml' -type f -print || echo "Локальный файл/папка runwayml не найдены."

    - name: Запуск b2_storage_manager.py
      run: |
        echo "--- GITHUB ACTION: Setting PYTHONPATH ---"
        # Убедимся, что путь к корневой папке проекта добавлен правильно
        export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE
        echo "PYTHONPATH is: $PYTHONPATH" # Выводим PYTHONPATH для отладки
        echo "--- GITHUB ACTION: PYTHONPATH Set. Executing Python Script (Direct Output) ---"
        # Запускаем Python НАПРЯМУЮ, без || {...} и без > logfile
        python -u scripts/b2_storage_manager.py --zero-delay
        echo "--- GITHUB ACTION: Python script finished (or failed). ---"

    - name: Загрузка логов как артефакта
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: all-logs # Собираем все .log файлы
        path: |
          logs/*.log # Собираем все файлы из папки logs
          *.log # Собираем логи из корня, если есть
        retention-days: 7
        # Добавим опцию, чтобы не падать, если файлы не найдены
        if-no-files-found: warn

