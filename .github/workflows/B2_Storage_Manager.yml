name: B2 Storage Manager Workflow

on:
  schedule:
    - cron: '15 16 * * *'  # Запуск ежедневно в 13:00 UTC
  workflow_dispatch:  # Возможность ручного запуска
    inputs:
      stage:
        description: 'Выберите этап для запуска'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - b2_storage_manager
          - generate_content
          - generate_media

jobs:
  run-b2-storage-manager:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: |
        echo "B2_BUCKET_NAME=${{ secrets.B2_BUCKET_NAME }}" >> $GITHUB_ENV
        echo "B2_ENDPOINT=${{ secrets.B2_ENDPOINT }}" >> $GITHUB_ENV
        echo "B2_ACCESS_KEY=${{ secrets.B2_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "B2_SECRET_KEY=${{ secrets.B2_SECRET_KEY }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "OPENAI_MODEL=${{ secrets.OPENAI_MODEL }}" >> $GITHUB_ENV
        echo "OPENAI_TEMPERATURE=${{ secrets.OPENAI_TEMPERATURE }}" >> $GITHUB_ENV
        echo "CONFIG_PUBLIC_PATH=${{ secrets.CONFIG_PUBLIC_PATH }}" >> $GITHUB_ENV
        echo "CONFIG_GEN_PATH=${{ secrets.CONFIG_GEN_PATH }}" >> $GITHUB_ENV
        echo "ARCHIVE_FOLDER=${{ secrets.ARCHIVE_FOLDER }}" >> $GITHUB_ENV
        echo "SCRIPTS_FOLDER=${{ secrets.SCRIPTS_FOLDER }}" >> $GITHUB_ENV

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Run B2 Storage Manager
      run: python scripts/b2_storage_manager.py

    - name: Run Generate Content
      if: ${{ github.event.inputs.stage == 'generate_content' }}
      run: python scripts/generate_content.py

    - name: Run Generate Media
      if: ${{ github.event.inputs.stage == 'generate_media' }}
      run: python scripts/generate_media.py
